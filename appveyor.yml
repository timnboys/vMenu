pull_requests:
  do_not_increment_build_number: false
# branches:
  # only:
  # - production
image: Visual Studio 2017
configuration: Release
build:
  parallel: true
  project: vMenu.sln
  verbosity: minimal
after_build:
  - cmd: copy README.md ..\build\README.md
  - cmd: copy LICENSE.md ..\build\LICENSE.md
  - ps: Invoke-WebRequest -OutFile '..\build\__resource.lua' https://vespura.com/vmenu/__resource.lua
  - cmd: if %APPVEYOR_REPO_TAG%==true (appveyor SetVariable -Name VERSION_NAME -Value %APPVEYOR_REPO_TAG_NAME%) else (appveyor SetVariable -Name VERSION_NAME -Value beta)
  - cmd: 7z a vMenu-%VERSION_NAME%.zip -r ..\build\*
  - cmd: appveyor PushArtifact vMenu-%VERSION_NAME%.zip
  # - cmd: if %APPVEYOR_REPO_TAG%==false (7z a vMenu-beta.zip -r ..\build\*)
  # - cmd: if %APPVEYOR_REPO_TAG%==false (appveyor PushArtifact vMenu-beta.zip)
deploy:
  - provider: GitHub
    release: "[Release] vMenu $(VERSION_NAME)"
    tag: $(VERSION_NAME)
    artifact: vMenu-$(VERSION_NAME).zip
    draft: true
    prerelease: false
    auth_token: $(github_auth)
    on:
      APPVEYOR_REPO_TAG: true
    description: "vMenu version $(VERSION_NAME)."
#before_build:
#  - ps: if($env:APPVEYOR_REPO_TAG -eq $True) {Invoke-RestMethod https://raw.githubusercontent.com/TomGrobbe/appveyor-discord-webhook/master/send.ps1 -o send.ps1; ./send.ps1 start $env:WEBHOOK_URL; rm send.ps1;}
#after_deploy:
#  - ps: if($env:APPVEYOR_REPO_TAG -eq $True) {Invoke-RestMethod https://raw.githubusercontent.com/TomGrobbe/appveyor-discord-webhook/master/send.ps1 -o send.ps1; ./send.ps1 deploy $env:WEBHOOK_URL; rm send.ps1;}
#on_success:
#  - ps: Invoke-RestMethod https://raw.githubusercontent.com/TomGrobbe/appveyor-discord-webhook/master/send.ps1 -o send.ps1
#  - ps: ./send.ps1 success $env:WEBHOOK_URL
#  - ps: rm send.ps1
#on_failure:
#  - ps: Invoke-RestMethod https://raw.githubusercontent.com/TomGrobbe/appveyor-discord-webhook/master/send.ps1 -o send.ps1
#  - ps: ./send.ps1 failure $env:WEBHOOK_URL
#  - ps: rm send.ps1
